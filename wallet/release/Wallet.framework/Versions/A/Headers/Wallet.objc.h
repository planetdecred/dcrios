// Objective-C API for talking to wallet Go package.
//   gobind -lang=objc wallet
//
// File is generated by gobind. Do not edit.

#ifndef __Wallet_H__
#define __Wallet_H__

@import Foundation;
#include "Universe.objc.h"


@class WalletAccount;
@class WalletAccounts;
@class WalletBalance;
@class WalletConstructTxResponse;
@class WalletGetTransactionResponseStruct;
@class WalletLibWallet;
@class WalletTransaction;
@class WalletTransactionBlockListenerStruct;
@class WalletTransactionCredit;
@class WalletTransactionDebit;
@class WalletTransactionListenerStruct;
@protocol WalletBlockNotificationError;
@class WalletBlockNotificationError;
@protocol WalletBlockScanResponse;
@class WalletBlockScanResponse;
@protocol WalletGetTransactionsResponse;
@class WalletGetTransactionsResponse;
@protocol WalletTransactionListener;
@class WalletTransactionListener;

@protocol WalletBlockNotificationError <NSObject>
- (void)onBlockNotificationError:(NSError*)err;
@end

@protocol WalletBlockScanResponse <NSObject>
- (void)onEnd:(int32_t)height cancelled:(BOOL)cancelled;
- (void)onError:(int32_t)code message:(NSString*)message;
- (BOOL)onScan:(int32_t)rescannedThrough;
@end

@protocol WalletGetTransactionsResponse <NSObject>
- (void)onResult:(NSString*)json;
@end

@protocol WalletTransactionListener <NSObject>
- (void)onTransaction:(NSString*)transaction;
- (void)onTransactionRefresh;
@end

@interface WalletAccount : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (int32_t)number;
- (void)setNumber:(int32_t)v;
- (NSString*)name;
- (void)setName:(NSString*)v;
- (WalletBalance*)balance;
- (void)setBalance:(WalletBalance*)v;
- (int64_t)totalBalance;
- (void)setTotalBalance:(int64_t)v;
- (int32_t)externalKeyCount;
- (void)setExternalKeyCount:(int32_t)v;
- (int32_t)internalKeyCount;
- (void)setInternalKeyCount:(int32_t)v;
- (int32_t)importedKeyCount;
- (void)setImportedKeyCount:(int32_t)v;
@end

@interface WalletAccounts : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (long)count;
- (void)setCount:(long)v;
- (NSString*)errorMessage;
- (void)setErrorMessage:(NSString*)v;
- (long)errorCode;
- (void)setErrorCode:(long)v;
- (BOOL)errorOccurred;
- (void)setErrorOccurred:(BOOL)v;
// skipped field Accounts.Acc with unsupported type: *[]wallet.Account

- (NSData*)currentBlockHash;
- (void)setCurrentBlockHash:(NSData*)v;
- (int32_t)currentBlockHeight;
- (void)setCurrentBlockHeight:(int32_t)v;
@end

@interface WalletBalance : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (int64_t)total;
- (void)setTotal:(int64_t)v;
- (int64_t)spendable;
- (void)setSpendable:(int64_t)v;
- (int64_t)immatureReward;
- (void)setImmatureReward:(int64_t)v;
- (int64_t)immatureStakeGeneration;
- (void)setImmatureStakeGeneration:(int64_t)v;
- (int64_t)lockedByTickets;
- (void)setLockedByTickets:(int64_t)v;
- (int64_t)votingAuthority;
- (void)setVotingAuthority:(int64_t)v;
- (int64_t)unConfirmed;
- (void)setUnConfirmed:(int64_t)v;
@end

@interface WalletConstructTxResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (int32_t)estimatedSignedSize;
- (void)setEstimatedSignedSize:(int32_t)v;
- (int64_t)totalOutputAmount;
- (void)setTotalOutputAmount:(int64_t)v;
- (int64_t)totalPreviousOutputAmount;
- (void)setTotalPreviousOutputAmount:(int64_t)v;
- (NSData*)unsignedTransaction;
- (void)setUnsignedTransaction:(NSData*)v;
@end

@interface WalletGetTransactionResponseStruct : NSObject <goSeqRefInterface, WalletGetTransactionsResponse> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (void)onResult:(NSString*)json;
@end

@interface WalletLibWallet : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(NSString*)homeDir;
- (NSString*)addressForAccount:(int32_t)account error:(NSError**)error;
- (NSString*)callJSONRPC:(NSString*)method args:(NSString*)args address:(NSString*)address username:(NSString*)username password:(NSString*)password caCert:(NSString*)caCert error:(NSError**)error;
- (BOOL)closeWallet:(NSError**)error;
- (WalletConstructTxResponse*)constructTransaction:(NSString*)destAddr amount:(int64_t)amount srcAccount:(int32_t)srcAccount requiredConfirmations:(int32_t)requiredConfirmations error:(NSError**)error;
- (BOOL)createWallet:(NSString*)passphrase seedMnemonic:(NSString*)seedMnemonic error:(NSError**)error;
- (BOOL)discoverActiveAddresses:(BOOL)discoverAccounts privPass:(NSData*)privPass error:(NSError**)error;
- (BOOL)fetchHeaders:(int32_t*)ret0_ error:(NSError**)error;
- (NSString*)generateSeed:(NSError**)error;
- (NSString*)getAccountName:(int32_t)account;
- (NSString*)getAccounts:(int32_t)requiredConfirmations error:(NSError**)error;
- (int32_t)getBestBlock;
- (int64_t)getBestBlockTimeStamp;
- (BOOL)getTransactions:(id<WalletGetTransactionsResponse>)response error:(NSError**)error;
- (void)initLoader;
- (BOOL)isAddressMine:(NSString*)address;
- (BOOL)isNetBackendNil;
- (BOOL)loadActiveDataFilters:(NSError**)error;
- (BOOL)nextAccount:(NSString*)accountName privPass:(NSData*)privPass;
- (BOOL)openWallet:(NSError**)error;
- (NSData*)publishTransaction:(NSData*)signedTransaction error:(NSError**)error;
- (BOOL)publishUnminedTransactions:(NSError**)error;
- (void)rescan:(int32_t)startHeight response:(id<WalletBlockScanResponse>)response;
- (void)shutdown;
- (NSData*)signTransaction:(NSData*)rawTransaction privPass:(NSData*)privPass error:(NSError**)error;
- (BOOL)spendableForAccount:(int32_t)account requiredConfirmations:(int32_t)requiredConfirmations ret0_:(int64_t*)ret0_ error:(NSError**)error;
- (BOOL)startRPCClient:(NSString*)rpcHost rpcUser:(NSString*)rpcUser rpcPass:(NSString*)rpcPass certs:(NSData*)certs error:(NSError**)error;
- (BOOL)subscribeToBlockNotifications:(id<WalletBlockNotificationError>)listener error:(NSError**)error;
- (void)transactionNotification:(id<WalletTransactionListener>)listener;
- (BOOL)verifySeed:(NSString*)seedMnemonic;
@end

@interface WalletTransaction : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSString*)hash;
- (void)setHash:(NSString*)v;
- (NSData*)transaction;
- (void)setTransaction:(NSData*)v;
- (int64_t)fee;
- (void)setFee:(int64_t)v;
- (int64_t)timestamp;
- (void)setTimestamp:(int64_t)v;
- (NSString*)type;
- (void)setType:(NSString*)v;
- (int64_t)amount;
- (void)setAmount:(int64_t)v;
- (NSString*)status;
- (void)setStatus:(NSString*)v;
- (int32_t)height;
- (void)setHeight:(int32_t)v;
// skipped field Transaction.Debits with unsupported type: *[]wallet.TransactionDebit

// skipped field Transaction.Credits with unsupported type: *[]wallet.TransactionCredit

@end

@interface WalletTransactionBlockListenerStruct : NSObject <goSeqRefInterface, WalletBlockNotificationError> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (void)onBlockNotificationError:(NSError*)err;
@end

@interface WalletTransactionCredit : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (int32_t)index;
- (void)setIndex:(int32_t)v;
- (int32_t)account;
- (void)setAccount:(int32_t)v;
- (BOOL)internal;
- (void)setInternal:(BOOL)v;
- (int64_t)amount;
- (void)setAmount:(int64_t)v;
- (NSString*)address;
- (void)setAddress:(NSString*)v;
@end

@interface WalletTransactionDebit : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (int32_t)index;
- (void)setIndex:(int32_t)v;
- (int32_t)previousAccount;
- (void)setPreviousAccount:(int32_t)v;
- (int64_t)previousAmount;
- (void)setPreviousAmount:(int64_t)v;
- (NSString*)accountName;
- (void)setAccountName:(NSString*)v;
@end

@interface WalletTransactionListenerStruct : NSObject <goSeqRefInterface, WalletTransactionListener> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (void)onTransaction:(NSString*)transaction;
- (void)onTransactionRefresh;
@end

FOUNDATION_EXPORT WalletGetTransactionResponseStruct* WalletCreateGetTransactionResponse(void);

FOUNDATION_EXPORT WalletTransactionListenerStruct* WalletCreateTransactionListener(void);

FOUNDATION_EXPORT WalletTransactionBlockListenerStruct* WalletCreateTransactionsBlockListener(void);

FOUNDATION_EXPORT WalletLibWallet* WalletNewLibWallet(NSString* homeDir);

FOUNDATION_EXPORT NSString* WalletNormalizeAddress(NSString* addr, NSString* defaultPort, NSError** error);

@class WalletBlockNotificationError;

@class WalletBlockScanResponse;

@class WalletGetTransactionsResponse;

@class WalletTransactionListener;

@interface WalletBlockNotificationError : NSObject <goSeqRefInterface, WalletBlockNotificationError> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onBlockNotificationError:(NSError*)err;
@end

@interface WalletBlockScanResponse : NSObject <goSeqRefInterface, WalletBlockScanResponse> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onEnd:(int32_t)height cancelled:(BOOL)cancelled;
- (void)onError:(int32_t)code message:(NSString*)message;
- (BOOL)onScan:(int32_t)rescannedThrough;
@end

@interface WalletGetTransactionsResponse : NSObject <goSeqRefInterface, WalletGetTransactionsResponse> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onResult:(NSString*)json;
@end

@interface WalletTransactionListener : NSObject <goSeqRefInterface, WalletTransactionListener> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onTransaction:(NSString*)transaction;
- (void)onTransactionRefresh;
@end

#endif
